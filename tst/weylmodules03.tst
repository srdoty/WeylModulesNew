# WeylModules, chapter 4
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("weylmodules03.tst");

# doc/_Chapter_Schur_Algebras.xml:39-42
gap> V:= SchurAlgebraWeylModule(3,[1,1,0]);
Schur algebra module V[ 1, 1, 0 ]

# doc/_Chapter_Schur_Algebras.xml:85-88
gap> SchurAlgebraDecompositionMatrix(3,4,3);
[ [ 1, 1, 0 ], [ 0, 1, 1 ], [ 0, 0, 1 ] ]

# doc/_Chapter_Schur_Algebras.xml:94-97
gap> BoundedPartitions(4,3);
[ [ 3, 0, 0, 0 ], [ 2, 1, 0, 0 ], [ 1, 1, 1, 0 ] ]

# doc/_Chapter_Schur_Algebras.xml:113-116
gap> SymmetricGroupDecompositionNumbers(2,[2,1,1]);
[ [ 2, 1, 1 ], 1, [ 1, 1, 1, 1 ], 1 ]

# doc/_Chapter_Schur_Algebras.xml:138-145
gap> SymmetricGroupDecompositionMatrix(2,4);
[ [ 0, 1 ], [ 1, 1 ], [ 1, 0 ], [ 1, 1 ], [ 0, 1 ] ]
gap> AllPartitions(4);
[ [ 4 ], [ 3, 1 ], [ 2, 2 ], [ 2, 1, 1 ], [ 1, 1, 1, 1 ] ]
gap> pRestrictedPartitions(2,4);
[ [ 2, 1, 1 ], [ 1, 1, 1, 1 ] ]

# doc/_Chapter_Schur_Algebras.xml:171-174
gap> CompositionToWeight([1,2,0,1]);
[ -1, 2, -1 ]

# doc/_Chapter_Schur_Algebras.xml:191-198
gap> WeightToComposition(4,[-1, 2, -1]);
[ 1, 2, 0, 1 ]
gap> WeightToComposition(8,[-1, 2, -1]);
[ 2, 3, 1, 2 ]
gap> WeightToComposition(6,[-1, 2, -1]);
fail

# doc/_Chapter_Schur_Algebras.xml:215-219
gap> AllPartitions(5);
[ [ 5 ], [ 4, 1 ], [ 3, 2 ], [ 3, 1, 1 ], [ 2, 2, 1 ], [ 2, 1, 1, 1 ], 
  [ 1, 1, 1, 1, 1 ] ]

# doc/_Chapter_Schur_Algebras.xml:240-247
gap> BoundedPartitions(5,3,2);
[ [ 2, 1, 0, 0, 0 ], [ 1, 1, 1, 0, 0 ] ]
gap> BoundedPartitions(5,3,3);
[ [ 3, 0, 0, 0, 0 ], [ 2, 1, 0, 0, 0 ], [ 1, 1, 1, 0, 0 ] ]
gap> BoundedPartitions(5,3);
[ [ 3, 0, 0, 0, 0 ], [ 2, 1, 0, 0, 0 ], [ 1, 1, 1, 0, 0 ] ]

# doc/_Chapter_Schur_Algebras.xml:262-267
gap> Conjugate([4]);
[ 1, 1, 1, 1 ]
gap> Conjugate([2,1,1,1]);
[ 4, 1 ]

# doc/_Chapter_Schur_Algebras.xml:283-288
gap> pRegular(3,[3,1,1]);
true
gap> pRegular(2,[3,1,1]);
false

# doc/_Chapter_Schur_Algebras.xml:303-308
gap> pRegularPartitions(3,5);
[ [ 4, 1 ], [ 3, 1, 1 ], [ 5 ], [ 2, 2, 1 ], [ 3, 2 ] ]
gap> pRegularPartitions(2,5);
[ [ 3, 2 ], [ 4, 1 ], [ 5 ] ]

# doc/_Chapter_Schur_Algebras.xml:324-329
gap> pRestricted(3,[3,1,1]);
true
gap> pRestricted(2,[3,1]);
false

# doc/_Chapter_Schur_Algebras.xml:344-349
gap> pRestrictedPartitions(3,5);
[ [ 3, 2 ], [ 3, 1, 1 ], [ 2, 2, 1 ], [ 2, 1, 1, 1 ], [ 1, 1, 1, 1, 1 ] ]
gap> pRestrictedPartitions(2,5);
[ [ 2, 2, 1 ], [ 2, 1, 1, 1 ], [ 1, 1, 1, 1, 1 ] ]

# doc/_Chapter_Schur_Algebras.xml:365-374
gap> Mullineux(2,[1,1,1]);
p-singular!
gap> Mullineux(2,[3]);
[ 3 ]
gap> Mullineux(3,[3]);
[ 2, 1 ]
gap> Mullineux(3,[2,1]);
[ 3 ]

#
gap> STOP_TEST("weylmodules03.tst", 1);
